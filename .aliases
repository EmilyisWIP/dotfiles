#!/usr/bin/env zsh
# Emily's aliases :>

# Variables
zshrc="~/.zshrc"
fishrc="~/.config/fish/config.fish"
nurc="$nu.config-path"
bashrc="~/.bashrc"

aliases_file="~/.aliases"
cfg_alacritty="~/.config/alacritty/alacritty.yml"
cfg_neofetch="~/.config/neofetch/config.conf"
cfg_starship="~/.config/starship.toml"
# cfg_kitty=".config/kitty/kitty.conf"
# cfg_wezterm="~/.config/wezterm/wezterm.lua"

# Configs
alias zshrc="xdg-open $zshrc"
alias fishrc="xdg-open $fishrc"
alias nurc="xdg-open $nurc"
alias bashrc="xdg-open $bashrc"

alias aliases="xdg-open $aliases_file"
alias alacrittycfg="xdg-open $cfg_alacritty"
alias neofetchcfg= "xdg-open $cfg_neofetch"
alias starshipcfg= "xdg-open $cfg_starship"
# alias kittycfg=  "xdg-open $cfg_kitty"
# alias wezcfg=    "xdg-open $cfg_wezterm"



# APT-FAST, PACKAGES
alias update="sudo nala update"
alias upgrade="sudo nala upgrade"
alias install="sudo nala install"
alias reinstall="sudo apt reinstall"
alias remove="sudo nala remove"
alias purge="sudo nala purge"
alias autoremove="sudo nala autoremove"
alias clean="sudo nala clean"

# Navigation
alias cd="zd-list"
alias zd="zd-list"
# alias z="zd-list"



# Misc
alias atom="atom --no-sandbox"
alias emacs="emacsclient -c -a 'emacs'"
editor="atom --no-sandbox"
alias bat="batcat --theme base16"
alias ls="exa --icons --group-directories-first"
alias ll="exa -1"
alias exa="\exa --icons --group-directories-first"
alias py="python3"
# alias fd="fd -IiH"
alias img="eog"
alias chrome="/usr/bin/google-chrome-stable --enable-features=WebUIDarkMode --force-dark-mode %U"
alias modpack="cmpdl"

alias crun="cargo run -q --release"
alias crund="cargo run --release"

alias clipboard="xclip -sel clip"

alias starship-zsh="source <(/usr/local/bin/starship init zsh --print-full-init)"
alias fast="fast --single-line -u"
$ error-message () { ansic --red "$1" }
$ success-message () { ansic --green "$1" }
$ info-message () { ansic --green "$1" }




# Wal
alias walb="wal -q -i $(gsettings get org.gnome.desktop.background picture-uri | cut -d "/" -f3-11 | sed 's/.$//' )"

alias palette="wal --preview -i $(gsettings get org.gnome.desktop.background picture-uri | cut -d "/" -f3-11 | sed 's/.$//' )"

alias abstract="wal -q -i Pictures/Wallpapers/abstract.jpg"
alias dracula="wal -q --theme dracula"




# Git
$ commit () { git commit -m "$@" -a }
$ push () { git push }
$ gp () { git commit -m "$@" -a; push }


# Scripts

set search-exclude="-E ~/.steam -E .local/share/Trash/ -E ./.git"

$ edit () {
  if echo $(which $@) | grep -q "found"
  ;then echo "File \"$@\" not found"
    ;echo "Creating \"$@\""
    ;$EDITOR $@;
  else atom_which=$(which $@)
    ;echo "Opening file in \$PATH"
    ;echo $atom_which
    ;xdg-open $atom_which
  ;fi
unset atom_which}

$ search-dir () {
  found=$(fd --min-depth 1 --type d $@ | fzf --height 40% --reverse) || ansic --red "➜ No input"
  if [ $found ]
  ;then
    cd $found
  ;fi
}
$ search-dir-all () {
  found=$(fd -a --min-depth 1 -E ~/.steam -E .local/share/Trash/ -E ./.git --type d $@ | fzf --height 40% --reverse) || ansic --red "➜ No input"
  if [ $found ]
  ;then
    cd $found
  ;fi
}


$ which-copy () {
  if echo $(which $@) | grep -q "not found"
  ;then echo "$@ Not found"
else echo $(which $@); echo $(which $@) | xclip -sel clip;fi
}


$ cd-list() {
  if [ -z $1 ]; then
    # echo "0 set"
    if [ -d $1 ] || [ $1 = "-" ]; then   \cd; ls;
  else ansic --red -n "➜ "; ansic --red "No such directory";fi;

  elif [ ! -z $2 ]; then
    # echo "2 set"
    if [ -d $1 ] || [ $1 = "-" ]; then  \cd $1; ls $2;
  else ansic --red -n "➜ "; ansic --red "No such directory";fi;

  else
    # echo "1 set"
    if [ -d $1 ] || [ $1 = "-" ]; then  \cd $1; ls;
  else ansic --red -n "➜ "; ansic --red "No such directory";fi;
  fi
}

$ zd-list() {
  if [ -z $1 ]; then
    # echo "0 set"
    \z; ls;
  elif [ ! -z $2 ]; then
    # echo "2 set"
    \z $1; ls $2;
  else
    # echo "1 set"
    \z $1; ls;
  fi
}





fda() {
  dir=$(fd -E .git -E .steam -E ./.local/share/Trash/ -IHL --type d --min-depth 1 . | fzf --height 40% --reverse --preview='exa --icons --group-directories-first -1 {}');
  if [ ! -z $dir ]; then cd "$dir";fi
  zle reset-prompt
}
zle     -N             fda
bindkey -M emacs '\ec' fda

cdf() {
   file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
   zle reset-prompt
}

ffa() {
  dir=$(fd -E .git -E .steam -E ./.local/share/Trash/ -IHL --type f --min-depth 1 . | fzf --height 40% --reverse --preview='batcat --style=numbers --color=always --line-range :500 --theme base16 {}');
  cd $dir
  echo $dir
  # zle reset-prompt
}


fh() {
     print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf --height 40% --reverse --cycle --preview='echo {}' --preview-window=down:2:wrap | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g');
     # zle reset-prompt
     # printf '\n'
     # print -z "test"
}
zle     -N             fh
bindkey -M emacs '\er' fh
